# 配置端口
server:
  port: 5003
  servlet:
    session:
      timeout: 21600

# 配置mysql数据库
spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://43.139.118.53:3306/wczy_blog?serverTimezone=Asia/Shanghai&allowMultiQueries=true
    username: root
    password: wcz991226
    hikari:
      minimum-idle: 5
      # 空闲连接存活最大时间，默认600000（10分钟）
      idle-timeout: 180000
      # 连接池最大连接数，默认是10
      maximum-pool-size: 10
      # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
      # 连接池名称
      pool-name: MyHikariCP
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      max-lifetime: 1800000
      # 数据库连接超时时间,默认30秒，即30000
      connection-timeout: 30000
      connection-test-query: SELECT 1
  # redis配置
  redis:
    host: 43.139.118.53
    port: 6379
  # es配置 若搜索模式为mysql可删除
  elasticsearch:
    rest:
      uris: 43.139.118.53:9200
  # 邮箱配置
#  mail:
#    host: smtp.qq.com
#    username: 邮箱用户名
#    password: 邮箱授权码
#    default-encoding: UTF-8
#    port: 587
#    properties:
#      mail:
#      smtp:
#      auth: true
#      socketFactory:
#      class: javax.net.ssl.SSLSocketFactory
  # 上传图片大小限制
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size:  100MB

# 配置MybatisPlus
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true

############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: wczy-token
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 86400
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: 1800
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: true
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: true


# 搜索模式 可选 elasticsearch或mysql
search:
  mode: mysql


# 上传模式 可选 oss或local  （http://和最后的/一定不能去！！！）
upload:
  mode: local
  local:
    # nginx映射本地文件路径，无域名则为 ip:83
    url: http://你的文件上传子域名/
    # 本地文件存储路径
    path: /usr/local/upload/
#  oss:
#    url: http://Bucket域名/
#    endpoint: OSS配置endpoint
#    accessKeyId: OSS配置accessKeyId
#    accessKeySecret: OSS配置accessKeySecret
#    bucketName: OSS配置bucketName
#  cos:
#    url: http://Bucket域名/
#    secretId: cos的secretId
#    secretKey: cos的secretKey
#    region: cos的region
#    bucketName: cos的bucketName

# 网站前台域名（邮件通知用）
#website:
#  url: http://你的主域名或ip

#第三方配置信息
#qq:
#  app-id: QQ APPID
#  check-token-url: https://graph.qq.com/oauth2.0/me?access_token={access_token}
#  user-info-url: https://graph.qq.com/user/get_user_info?openid={openid}&access_token={access_token}&oauth_consumer_key={oauth_consumer_key}
#
#weibo:
#  app-id: 微博APPID
#  app-secret: 微博APPSECRET
#  grant-type: authorization_code
#  redirect-url: 微博回调地址
#  access-token-url: https://api.weibo.com/oauth2/access_token
#  user-info-url: https://api.weibo.com/2/users/show.json?uid={uid}&access_token={access_token}